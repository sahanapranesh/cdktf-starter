import { IamPolicy } from '@cdktf/provider-aws/lib/iam-policy';
import { IamRole } from '@cdktf/provider-aws/lib/iam-role';
import { IamRolePolicyAttachment } from '@cdktf/provider-aws/lib/iam-role-policy-attachment';
import { Construct } from 'constructs';

export interface IPrincipal {
  grant(grantName: string, actions: string[], ...resources: string[]): void;
}

export class AwsIamRole extends Construct implements IPrincipal {
  public readonly ecsTaskExecutionRole: IamRole;

  constructor(scope: Construct, name: string) {
    super(scope, name);

    this.ecsTaskExecutionRole = new IamRole(scope, name+'task-role', {
      name: `${name}ecsTaskRole`,
      assumeRolePolicy: JSON.stringify({
        Version: '2012-10-17',
        Statement: [
          {
            Action: 'sts:AssumeRole',
            Principal: {
              Service: 'ecs-tasks.amazonaws.com',
            },
            Effect: 'Allow',
            Sid: '',
          },
        ],
      }),
    });
  }

  public grant(grantName: string, actions: string[], ...resources: string[]) {
    const policy = new IamPolicy(this, grantName+'-policy', {
      namePrefix: grantName,
      description: 'automatically generated by cdktf',
      policy: JSON.stringify({
        Version: '2012-10-17',
        Statement: [
          {
            Effect: 'Allow',
            Action: actions,
            Resource: resources.length > 0 ? resources : ['*'],
          },
        ],
      }),
    });

    new IamRolePolicyAttachment(this, grantName+'-policy-attachment', {
      role: this.ecsTaskExecutionRole.name!,
      policyArn: policy.arn,
    });
  }
}